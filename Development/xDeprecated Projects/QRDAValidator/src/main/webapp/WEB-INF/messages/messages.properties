#
# Copyright (c) 2016+, ESAC, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without modification, 
# are permitted provided that the following conditions are met:
#
#  * Redistributions of source code must retain the above copyright notice, this 
#    list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright notice, 
#    this list of conditions and the following disclaimer in the documentation 
#    and/or other materials provided with the distribution.
#  * Neither the name of HL7 nor the names of its contributors may be used to 
#    endorse or promote products derived from this software without specific 
#    prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
# IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR 
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, 
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
# POSSIBILITY OF SUCH DAMAGE.
#

# See: messageSource bean(s) defined in servlet-context.xml

global.title=QRDA Validator

# Footer items

footer.title=QRDA Validator
footer.company=ESAC Inc.
footer.version=version 1.0.1
footer.build=build 26

global.search=Search
global.upload=Upload
global.saveAs=Save As:
global.login=Log In
global.yes=Yes
global.no=No
global.active=Active
global.delete=Delete
global.in=in
global.line=Line

# Main Menu Titles

global.title.inventory.schematron=Schematron Inventory
global.title.inventory.test=Test File Inventory
global.title.inventory.voc=Vocabulary Files
global.title.inventory.workbench=Validation Workbench
global.title.inventory.history=Previous Validations
global.title.inventory.categories=Schematron Categories


# Navigation items

global.nav.title=<span style='color:red'>QRDA</span> Validator
global.nav.info=Information
global.nav.schematrons=Schematrons
global.nav.tests=Test Files
global.nav.voc=Vocabulary Files
global.nav.history=History
global.nav.admin=Admin

global.nav.workbench=Validation Workbench
global.nav.workbench.tab.info=Create a Test
global.nav.workbench.tab.summary=Summary
global.nav.workbench.tab.errors=Errors
global.nav.workbench.tab.warnings=Warnings
global.nav.workbench.tab.schematron=Schematron
global.nav.workbench.tab.testFile=Test File
global.nav.workbench.tab.raw=Raw Report
global.nav.workbench.tab.xmlErrors=XML Errors

global.nav.hl7=HL7 QRDA
global.nav.cec=CMS CEC QRDA
global.nav.hqr=CMS HQR QRDA
global.nav.pqrs=CMS PQRS QRDA
global.nav.results=Validation Results
global.nav.voc.qrda1=QRDA I
global.nav.voc.qrda3=QRDA III

# Buttons 
global.button.search=Search
global.button.print=Print
global.button.delete=Delete
global.button.download=Right-Click to Download
global.button.upload=Upload
global.button.validate=Validate
global.button.rerun=Rerun
global.button.add=Add
global.button.save=Save
global.button.login=Log In

# Text input placeholder text

global.placeholder.search=Search for text...
global.placeholder.test=Test Run
global.placeholder.upload=Upload a file...
global.placeholder.saveAs=Optional: Save as different name
global.placeholder.categoryName=Internal category name
global.placeholder.categoryDisplayName=Displayed Category name

# Confirmation popup text 
global.filedelete.confirm=Click OK if you really want to delete this file from the system

# Hompe page: Introduction text 

introMenuIntro=About
intro.title.intro=QRDA VALIDATOR
intro.text=<b>The Quality Reporting Document Architecture (QRDA)</b> is a document template for reporting eCQMs to CMS. \
It is a type of Clinical Document Architecture (CDA) which specifies the format and language of clinical documents.\
 QRDA is specified in various versions, such as QRDA-I and QRDA-III, which are differentiated by the type of data they are reporting. \
 <p><br/><b>QRDA-I:</b> Collects quality data for an individual patient for one or more quality measures. When pooled and analyzed, each \
 report contributes the quality data necessary to calculate population measure metrics.</p>\
<p><b>QRDA-III:</b> Aggregate quality reporting containing calculated summary data for one or more measures for a specified population \
of patients within a particular health system over a specific period of time. </p> \
 <p>A document written in the QRDA format will contain all the information necessary to fulfill reporting requirements for CMS reimbursement.</p> 
 
 intro.descriptions.intro=The <b>QRDA Validator</b> tool allows you to run validations of test report files against schematrons built for those specific report types. \
 This can be useful in the development of a schematron: use this tool to verify that the schematron is reporting failures in test files with known errors. \
 It is also useful for validating test files against a schematron known to be correctly defined.</p> \
 <p>There are five workspaces in this tool, each accessible by selecting the tabs along the top of the tool window. In addition, restricted access to administrative functions is \
 available via the <i>admin</i> link at the bottom of the page.<br/></p>
 
 # Home page: Schematron information
 
 introMenuSchematrons=Schematron Inventory
 intro.title.schematrons=SCHEMATRON INVENTORY
 intro.descriptions.schematrons= <p>The Schematron Inventory is accessed via the Schematron tab in the top menu. The schematron inventory allows you to \
 view, upload and remove schematron files used in the tool to validate report files. This tool allows for the segregation of schematron files into separate categories (i.e. folders). \
 Segregation of schematrons into categories allows for the validation of different classes of report files. By default, four schematron categories are provided: \
 <ul><li>Hospital Quality Reports (HQR)</li><li>Clinical Exchange Center QRDA Reports (CEC)</li><li>Health Level 7 Reports (HL7)</li><li>Physicians Quality Reporting System Reports (PQRS)</li></ul> </p>\
 <p>The schematrons available for use in validating the above types of report files are displayed under the category for the type of report they validate. When you upload \
 a new schematron file into the system, care must be taken to upload the schematron in the appropriate category of the inventory. </p>\
 <p>Note that the ability exists to remove a schematron from this tool. Use discretion before removing a schematron as these are available to all users of the tool.

# Home page: Test File information

introMenuTestFiles=Test File Inventory
intro.title.testfiles=TEST FILE INVENTORY
intro.descriptions.testfiles=<p>The test report files available for validation using the schematrons in the tool are managed by selecting \
the Test Files menu item in the top menu. As with schematron files, test files can be segregated into categories. The categories available for the test file inventory mirrors exactly those of the schematron inventory: the test files are segregated \
according to their category - by default one of HQR, CEC, HL7, or PQRS - as described in the Schematron Inventory description..</p>\
<p>Like schematron files, you can upload test files into the tool. You must upload a test file into the tool in the Test File Inventory before you can validate that \
 file against a schematron. A test file should be a well-formed XML file in order for the validation to work appropriately.</p>\
<p>When a test file is validated against a schematron in this tool, the number of error and warning failures are calculated and presented in the results. You can \
 indicate the number of errors and/or warnings expected in the validation by providing that information in the header comments section of your test file. Place the following \
 comment lines within the first 20 lines of your test file to have those values tracked: </p> \
<p style="text-align:center;">Total Errors Expected: N<br/>\
                              Total Warnings Expected: N</p>\
<p> where N is the actual failure count you expect in the test.<br/>Note:These lines are optional. They are not required to run the validation process.</p>\
<p>As with schematron files, the ability exists to remove test files from this tool. Use discretion before removing a test file, especially one you did not upload yourself, as these are available to all users of the tool.<\p>

# Home page: Vocabulary File information

introMenuVocFiles=Vocabulary Files 
intro.title.vocfiles=VOCABULARY FILES
intro.descriptions.vocfiles=<p>Schematrons reference external vocabulary files when validating data files. The vocabulary file is referenced by name in the schematron file. \
Since different classes of schematrons may reference different vocabulary files, and since the schematron files may reference the vocabulary file by the same name, \
we need a way to associate multiple vocabulary files with the proper class of schematron. You do this in  the Vocabulary Files tab. Again, like schematrons and test files, you can upload vocabulary files \
appropriate for the class of schematron supported into categories. (By default, one of HQR, CEC, HL7, or PQRS). </p> \
<p>Note that vocuabulary files are expected to be of type ".xml", and are most often simply named "voc.xml". If you are working with a schematron that references a vocabulary \
file of a different name, simply upload that file to the appropriate section in the Vocabulary Files workspace. Your scheamtron will find the file by name and use it during validation.

# Home page:  Workbench information

introMenuWorkbench=Validation Workbench
intro.title.workbench=VALIDATION WORKBENCH
intro.descriptions.workbench=<p>Select the Workbench menu item to validate test files using a schematron suitable for particular files you have chosen. </p> \
In this tool you create a Validation Suite, which consists of a schematron file and a list of test files to validate using that schematron. When the test files \
in a validation suite are validated using the schematron, the results of the validation run are displayed in the workbench. Select a test file validation report to view \
the details of the test results for that file.</p> \
<p>Note: The schematron file and the test files must be present in the schematron and test file inventories, respectively, \
in order to be available for use in a Validation Suite.</p>\
Further detailed instructions on creating and running a validation suite are presented when you navigate to the Validation Workbench.<\p>

# Home page: History information

introMenuHistoryFiles=History 
intro.title.historyfiles=HISTORY
intro.descriptions.historyfiles=<p>Every validation run in this tool is saved and can be reviewed by accessing it in the History tab. \
Each validation run is saved in the same category as the schematron/test files that make up the validation run. These categories are displayed in the History inventory page. \
You can filter the validation tests retrieved in the History page by providing text to the search process. Only validation tests whose name contains the given text will be retrieved for viewing. \
(If you provide no filtering  text, the search will retrieve all validation tests.) </p>\
<p>You can review the results of the validation test by clicking on the name of a test. The results are displayed exactly as they were in the Validation Workbench when originally performed. \
You can re-run this test by clicking on the "Rerun" button. (Doing so creates a new validation test which you can access later through the history workspace.)

# Home Page: Admin information

introMenuAdmin=Admin Page
intro.title.admin=ADMIN PAGE
intro.descriptions.admin=<p>The Admin page is used for maintaining the categories available throughout the validator application. \
On this page you can specify which of the existing categories are active (visible) in the application. You can also create a new category. A new category \
consists of the name of the category (which is used as the directory name in the file system) and a display name (which is how the category is \
shown in the UI). Note that non-whitespace characters are removed from the category name, and all space characters are replaced with underscores. \
Category display names may contain non-whitespace characters.</p> \
<p>Note that any changes to the categories on the admin page are visible to all users of the QRDA validator application. These are global changes to the system. \
<p>You may also remove a category from the system. Note that when you remove a category, ALL content under this category (schematron files, test files, vocabulary files) \
are deleted from the filespace. When deleting a category, all data under that category is irrevocably removed from the system. Use caution when deleting categories from the system.<\p>\
Access to the admin page is restricted via username and password. The username for the admin page is simply 'admin'. The password defaults to a hard-coded \
value in the system code, but may be set for an individual installation by setting a property in the "validator.properties" file found in the <i>properties</i> \
directory under the QRDA_HOME file space (see Technical Notes). The property name must be "adminPassword". If no value is set, the system default is used. The system default password is unavailable to the public. </p>

# Home page: Developer technical notes

introMenuTechNotes=Technical Notes
intro.title.technotes=Technical Notes
intro.descriptions.technotes=<p>This tool was developed as a web application. It was developed, tested, and deployed to run in an Apache Tomcat Web Server. </p>\
<p>All files uploaded and generated by this tool are stored on disc in a filespace defined by the environment variable QRDA_HOME.  They are NOT stored within the application context of the tool's .war or expanded .war filespace. \
The filespace in which the files are kept, i.e. the tool's file repository, is a fixed set of file folders located immediately under the folder defined in the system environment varialble QRDA_HOME. The QRDA_HOME environment \
variable is defined in /etc/init/tomcat.conf in a Linux environment, or as a system environment variable in a Windows environment. \
  (You can also set the QRDA_HOME environment variable in setenv.sh file in the CATALINA_HOME/bin directory in Linux). <br/>The QRDA_HOME \
folder structure is: \
			<ul style='list-style:none;'><li>&lsaquo;QRDA_HOME&rsaquo; <ul style='list-style:none;'><li>qrda\
				<ul style='list-style:none;'><li>isoFiles</li><li>properties</li><li>schematrons</li><li>testfiles</li><li>result</li></ul>\
			</li></ul>\
<p><br/>The <i>properties</i> folder, above, contains a properties file  <i>validator.properties</i>. This file contains the names of the ISO transformation files that the tool uses in transforming a schematron file into an .xsl file that is used to validate test files. \
The actual ISO files referenced in the <i>validator.properties</i> file are stored in the <i>isoFiles</i> folder in the filespace as defined above. <br/>\
The properties folder also contains the serialized representation of the category structure dislpayed in the application. This file should not be touched outside of the application.</p>\
<p>The <i>result</i> folder contains the files generated by the tool when validating test files against a schematron. A new folder under the <i>result</i> folder is created for \
each validation suite created and run in the Validation workbench.</p>\
Folders exist under each of the folders Schematrons, TestFiles, Result,  and IsoFiles that correspond to the categories being supported by the tool. An administrative user has the ability to create, delete and modify the categories presented in the application. \
By default four categories are supported: <ul style='list-style:none;'><li>HL7</li><li>CEC</li><li>HQR</li><li>PQRS</li></ul>\
though these are subject to change over time.\
<p>For this tool to run properly, certain files must be present in each of the category folders under the QRDA_HOME/isoFiles directory. Specifically, these are: \
<ul><li><b>voc.xml</b>: a file that defines a vocabulary namespace. A copy of this vocabulary file appropriate for  this tool must be located in the <i>isoFiles</i> folder. \
<\li><li><b>iso_schematron_skeleton_for_saxon.xsl</b>: an XSL file necessary for transforming schematron files. A copy of this file must be located in the <i>isoFiles</i> folder.  \
</li></ul> </p><p>If deployed on a Linux-based server, the permissions for QRDA_HOME file space must be set properly to allow for the creating, reading, and writing of files and folders. \
<p>When viewing and validating very large files, there is a chance that the Apache Tomcat application will run out of memory to perform properly. As a precaution, a system \
administrator may increase the allotted memory available to the Tomcat application. Set a system environment variabe CATALINA_OPTS to the value below: <\p> \
<p style='text-align:center;'>-Xms512m -Xmx1024m</p><p>to increase Tomcat memory allocations. (The server musts be restarted for the change to take effect.)</p>
			

# Schematron Inventory text

inventory.schematron.button.downloadTitle=Download Schematron
inventory.schematron.button.downloadInstr=Right Click on the download icon and select \\"Save Target As\\" to download this Schematron file.

# Test File Inventory text

inventory.testFile.button.downloadTitle=Download Test File
inventory.testFile.button.downloadInstr=Right Click on the download icon and select \\"Save Target As\\" to download this test file.

inventory.uploaded=Uploaded
inventory.uploadFile=Upload a file...
inventory.expectedWarnings= Expected Warning/Non-Critical Failures:
inventory.expectedErrors= Expected Critical/Error Failures:  

# Vocabulary File text

inventory.voc.button.downloadTitle=Download Vocabulary File
inventory.voc.button.downloadInstr=Right Click on the download icon and select \\"Save Target As\\" to download this vocabulary file.
inventory.voc.title=Vocubulary Files
inventory.voc.explanation=The name of the vocabulary file used for validation must exactly match the name of the vocabulary file that appears in the schmatron you are validating. Typically that name is 'voc.xml'. If your schematron references a vocabulary file by a different name, simply upload that file into the correct area here. (This inventory only displays files with an extension '.xml')

# Validation Workbench text

workbench.button.selectSchematron=Select A Schematron...
workbench.button.selectTest=AVAILABLE TEST FILES...
workbench.title.rawreport=Validation Report
workbench.title.info=How To Run a Validation Test
workbench.title.summary=Validation Summary
workbench.title.lastrun=Timestamp key:
workbench.title.schematron=Schematron: 
workbench.title.errors=Validation Errors
workbench.title.warnings=Validation Warnings
workbench.title.xmlErrors=XML Syntax Validation Errors
workbench.title.validatedUsing=Validated using XSD file: 
workbench.step0=Step 1: Provide a default name for your tests (optional): 
workbench.step1=Step 2: Select a Schematron to Use
workbench.step2=Step 3: Select Test Cases to Validate
workbench.step3=Step 4: Click Validate Button
workbench.failure=Failure:
workbench.failure.assert=Assert ID:
workbench.failure.critical=Critical
workbench.failure.warning=Warning
workbench.failure.rule=Rule Name: 
workbench.failure.context=Context: 
workbench.failure.location=Location: 
workbench.failure.test=Failed Test:
workbench.failure.statement=Problem:
workbench.failure.isCritical=Critical?	
workbench.failure.lineNumber=Test File Line Number:
workbench.failure.atLine= - lines 
workbench.failure.toLine=to 
workbench.failure.source=Source of failure in test file
workbench.button.downloadTitle=Download Validation Report
workbench.button.downloadInstr=Right Click on the download icon and select \\"Save Target As\\" to download this report file.
workbench.button.rerun=ReRun


workbench.text.howTo=A validation test consists of a Schematron file and a list of test cases that the Schematron is applied to. \
To create a validation test suite, you need only do four things: \
<br/><ol><li> Give the tests a name that will be used for every test run during the current session. (This is entirely optional).</li>\
<li> Under one of the schematron categories, select the Schematron file to use to validate test files.  When you choose a Schematron, the test case files that are appropriate for using with the selected \
Schematron are automatically displayed in the AVAILABLE TEST FILES drop down panel. For example, if you pick a schematron file from Category A, only test files found in Category A in the test file inventory are provided for selection.</li>\
<li> Select one or more test files to apply the Schematron to.<br/><b>NOTE:</b> When you select a schematron file, the name of this test is changed to be the name of the schematron. If you wish to give the test a different name, you can change the text in \
the 'name' field at any time after choosing the schematron.</li>\
<li> Click on the Valildate button.</li></ol><p>\
When a test is run, the summary information for the test will be displayed in this space. Each test file will be displayed with its validation results.\
To view the details of an individual test case, click on the name of the test file in the summary display. </p>\
<p>To create a new test, simply click on the Validation Workbench item on the top-level menu.</p> \
<p>Every test run is saved in the application history and can be accessed later in the History tab of the application. You can even re-run this test in place in the history tab.</p>

# History text

inventory.history.title=Previous Validations
inventory.history.explanation=Provide a filter below to retrieve only those tests whose name contains the filter text. (No filter defaults to finding all files with extension ".vs")
inventory.history.performed=Test Performed

# Category Management text

category.manage.title=Manage Schematron Categories
category.manage.current=Manage Current Categories
category.manage.instructions=
category.manage.name=Category Name
category.manage.displayName=Display Name
category.manage.add=Add a new Category
category.manage.deleteWarn=Warning! Deleting this category will remove all uploaded or generated files under this category. Click OK if you want to proceed.
category.manage.info.title.name=Category Name
category.manage.info.instr.name=This is the name of the category as represented on the server file space. Only alphanumeric characters are allowed. 
category.manage.info.title.displayName=Category Display Name
category.manage.info.instr.displayName=This is the name of the category as shown on the user interface.
category.manage.info.title.active=Category Active status
category.manage.info.instr.active=Only categories with an active status will be presented in the user interface.  
category.manage.info.title.delete=Delete a Category
category.manage.info.instr.delete=Deleting a category will remove all data associated with the category from the server. 

# Login text
login.title=Log in as Administrator
login.instructions=Log in to access administration pages
login.username=Username:
login.password=Password:


# Legacy. Unused
crigtt.msg.test.data.url=http://confluence.siframework.org/x/kwALAw